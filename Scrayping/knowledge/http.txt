http
：「開始行，ヘッダー，空行，ボディー」からなる
：開始行（GET / HTTP/1.1）
：ヘッダー（Host: example.com, User-Agent）
：空行（　）

User-Agent
：ネット利用者が使用しているOS・ブラウザ
：アクセス時に相手側に通知される
：アクセス解析に利用されることが多い
：OSやブラウザバージョンによって表示を切り替え
：検索エンジンのロボットは、独自のUA名を利用。一般的ユーザーと区別
：自社サイトへのアクセスが複数回あっても、一般かボットによるものか区別可能
：ブラウザの利用者が任意に変更することも可能。一つの指標。


Sessionオブジェクト
：s = requests.Session()
：HTTPヘッダーやBasic認証などの設定を複数のリクエストで使い回せる

HTTPKeepAliveと呼ばれる接続方式
：一度確立したTCPコネクションを複数のリクエストで使い回す
：オーバーヘッドとなるTCPコネクションの確立処理を省略
：パフォーマンス向上が期待

TLS/SSLハンドシェイク
：httpsで使用する
：TCPコネクション確立時に行われる暗号化
：負荷のかかる処理
：HTTPKeepAliveで軽減


RFC(Request for Comments)3986
スキーム
：httpやhttpsのようにプロトコル
オーソリティ
：//のあとに続き、通常ホスト名を表す。
：ユーザー名やパスワード、ポート番号を含む場合もある。
：パス/で始まり、そのホストにおけるリソースのパスを表す。
クエリ
：?のあとに続き、パスとは異なる方法でリソースを指定するために使われる。
：存在しない場合もある。
フラグメント
：#のあとに続き、リソース内の特定の部分などを表す。
：存在しない場合もある。
