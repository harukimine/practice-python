HTMLパーサー
：HTMLのタグを解析（パース）して必要な部分を抜き出す
：情報が適切にマークアップされているWebページは、
　正規表現に比べて簡単かつ確実に必要とする部分を抜き出せます


文字参照（エンティティ）
：&.*;
：e.g., &amp;
：unescape()メソッドを使うと、文字列に含まれる文字参照を対応するUnicode文字に変換


SAX（Simple API For XML）
：XMLを解析する標準APIの一つ
：DOMとは違って文書を先頭から順に読み、そこで発生したイベントを経由して情報をプログラムに伝達。
：解析中に分かったことから順次伝達するため、構文解析の終了まで待たずに処理を開始できる
：巨大なXMLファイルでも少ないメモリで対処することが出来ます。
：XML文書を更新することは出来ません。

DOM（Document Object Model）
：XMLの構造も保存
：XML文書全体の構文解析が終了した後、DOMツリーを作成
：DOMツリーができるまでは、プログラムは何の情報も得ることはできない
：XML文書全体をツリー形式で保存するため、応じた大量のメモリが必要


文字コード
：ContentTypeヘッダーにcharsetがない場合，r.encoding=='ISO88591'
：ISO88591はラテン語。日本語は文字化け。
：requests.apparent_encodingで推定されたエンコーディングが得られます

metaタグのエンコーディング
：Requestsでは取得しない。特定のコンテンツに依存しないため。
：正規表現で対処。


RSS（Really Simple Syndication）
：XMLをもとに標準化
：HTMLよりも簡単かつ確実にパースできる


XMLの名前空間
：異なる意味で同じ名前の要素を1つの文書に混在できる
：lxmlでスクレイピングする際は、目的の要素が単純には取得できないため注意
：名前空間が使われたXMLの例として、Atomフィード


パーマリンク（Permalink）
：1つのコンテンツに対応し、時間が経っても対応するコンテンツが変わらないURL
：クローラーがコンテンツを認識しやすく、SEO（検索エンジン最適化）に強い
：ソーシャルメディアに投稿しやすい


AJax（Asynchronous JavaScript + XML）
：リンクをクリックしたときにURLが変わらずにコンテンツだけが変わる
：not パーマリンク
：JavaScriptとXMLを使って非同期にサーバとの間の通信を行うこと
：一部の情報をサーバーに送信して、それを受け取り反映させる仕組み
：組み込みオブジェクト
